/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.spoonacular.client.model

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.spoonacular.client.model.GetProductInformation200Response
import com.spoonacular.client.model.GetProductInformation200ResponseIngredientsInner
import com.spoonacular.client.model.SearchGroceryProductsByUPC200ResponseNutrition
import com.spoonacular.client.model.SearchGroceryProductsByUPC200ResponseServings

class GetProductInformation200ResponseTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of GetProductInformation200Response
        //val modelInstance = GetProductInformation200Response()

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `title`
        should("test title") {
            // uncomment below to test the property
            //modelInstance.title shouldBe ("TODO")
        }

        // to test the property `breadcrumbs`
        should("test breadcrumbs") {
            // uncomment below to test the property
            //modelInstance.breadcrumbs shouldBe ("TODO")
        }

        // to test the property `imageType`
        should("test imageType") {
            // uncomment below to test the property
            //modelInstance.imageType shouldBe ("TODO")
        }

        // to test the property `badges`
        should("test badges") {
            // uncomment below to test the property
            //modelInstance.badges shouldBe ("TODO")
        }

        // to test the property `importantBadges`
        should("test importantBadges") {
            // uncomment below to test the property
            //modelInstance.importantBadges shouldBe ("TODO")
        }

        // to test the property `ingredientCount`
        should("test ingredientCount") {
            // uncomment below to test the property
            //modelInstance.ingredientCount shouldBe ("TODO")
        }

        // to test the property `ingredientList`
        should("test ingredientList") {
            // uncomment below to test the property
            //modelInstance.ingredientList shouldBe ("TODO")
        }

        // to test the property `ingredients`
        should("test ingredients") {
            // uncomment below to test the property
            //modelInstance.ingredients shouldBe ("TODO")
        }

        // to test the property `likes`
        should("test likes") {
            // uncomment below to test the property
            //modelInstance.likes shouldBe ("TODO")
        }

        // to test the property `aisle`
        should("test aisle") {
            // uncomment below to test the property
            //modelInstance.aisle shouldBe ("TODO")
        }

        // to test the property `nutrition`
        should("test nutrition") {
            // uncomment below to test the property
            //modelInstance.nutrition shouldBe ("TODO")
        }

        // to test the property `price`
        should("test price") {
            // uncomment below to test the property
            //modelInstance.price shouldBe ("TODO")
        }

        // to test the property `servings`
        should("test servings") {
            // uncomment below to test the property
            //modelInstance.servings shouldBe ("TODO")
        }

        // to test the property `spoonacularScore`
        should("test spoonacularScore") {
            // uncomment below to test the property
            //modelInstance.spoonacularScore shouldBe ("TODO")
        }

        // to test the property `generatedText`
        should("test generatedText") {
            // uncomment below to test the property
            //modelInstance.generatedText shouldBe ("TODO")
        }

    }
}
